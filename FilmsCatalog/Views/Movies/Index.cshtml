@{
    ViewData["Title"] = "Список фильмов";
}
@model MoviesListViewModel
@using Microsoft.AspNetCore.Identity
@inject SignInManager<User> SignInManager

<ul class="list-group">
    @foreach (var movie in Model.Movies)
    {
        <li class="list-group-item">
            <a asp-controller="Movie" asp-action="Details" asp-route-id="@movie.Id">@movie.Name</a>
        </li>
    }
</ul>

@if (SignInManager.IsSignedIn(User))
{
    <a class="btn btn-primary" asp-controller="Movie" asp-action="New">Добавить</a>
} else
{
    <a class="btn btn-outline-primary disabled" >Для добавления фильма войдите</a>
}

<nav>
    <ul class="pagination text-center">
        <li class="page-item @(Model.Page <= 1 ? "disabled" : null)">
            <a class="page-link" asp-action="Index" asp-route-page="@(Model.Page - 1)">
                <span aria-hidden="true">&laquo;</span>
            </a>
        </li>
        @for (var i = Math.Max(1, Model.Page - 1); i <= (Model.HasNext ? Model.Page + 1 : Model.Page); i++)
        {
            <li class="page-item @(Model.Page == i ? "active": null)"><a class="page-link" asp-action="Index" asp-route-page="@(i)">@(i)</a></li>
        }
        <li class="page-item @(!Model.HasNext ? "disabled" : null)">
            <a class="page-link" asp-action="Index" asp-route-page="@(Model.Page + 1)">
                <span aria-hidden="true">&raquo;</span>
            </a>
        </li>
    </ul>
</nav>